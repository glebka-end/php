version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: backend:latest
    hostname: backend
    container_name: backend
    ports:
      - 80
    command: ['/usr/bin/supervisord', '-c', '/etc/supervisor/conf.d/supervisord.conf']
    env_file:
      - backend/.env
    volumes:
      - storage:/var/www/api/storage
    networks:
      - backend

  nginx:
    image: nginx:latest
    hostname: nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - /opt/ssl/aivp.io/aivp.cert:/opt/ssl/aivp.io/aivp.cert
      - /opt/ssl/aivp.io/aivp.key:/opt/ssl/aivp.io/aivp.key
    depends_on:
      - backend
      - mysql-server
    networks:
      - backend

  mysql-server:
    image: mysql:8.0
    hostname: mysql-server
    container_name: mysql-server
    env_file:
      - ./mysql-server/mysql-server.env
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-server/my.cnf:/etc/my.cnf
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      interval: 15s
      timeout: 5s
      retries: 6
    networks:
      - backend

  redis-server:
    image: redis:alpine
    hostname: redis-server
    container_name: redis-server
    command: ['redis-server', '--save', '', '--appendonly', 'no']
    volumes:
      - redis_data:/data
    networks:
      - backend

  beanstalkd:
    hostname: beanstalkd
    container_name: beanstalkd
    image: docker.io/theodesp/beanstalkd-alpine
    networks:
      - backend

volumes:
  storage:
    name: storage
    driver: local
  public:
    name: public
    driver: local
  php:
    name: php
    driver: local
  mysql_data:
    name: mysql_data
    driver: local
  redis_data:
    name: redis_data
    driver: local

networks:
  backend:
    name: backend
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
